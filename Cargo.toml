[package]
name = "sunce"
version = "0.2.3-dev"
edition = "2024"
rust-version = "1.90"
description = "High-performance command-line solar position calculator"
license = "MIT"
repository = "https://github.com/klausbrunner/sunce"
homepage = "https://github.com/klausbrunner/sunce"
documentation = "https://github.com/klausbrunner/sunce"
readme = "README.md"
authors = ["Klaus Brunner <klaus.brunner@gmail.com>"]
keywords = ["solar", "sun", "astronomy", "sunrise", "sunset"]
categories = ["command-line-utilities", "science"]
include = [
    "src/**/*",
    "tests/**/*",
    "build.rs",
    "Cargo.toml",
    "Cargo.lock",
    "README.md",
    "LICENSE"
]

[[bin]]
name = "sunce"
path = "src/main.rs"

[dependencies]
clap = { version = "4.5", features = ["help"] }
chrono = "0.4"
chrono-tz = "0.10"
iana-time-zone = "0.1"
thiserror = "2.0"
solar-positioning = "0.3"
arrow = { version = "56", default-features = false, optional = true }
parquet = { version = "56", features = ["arrow", "snap"], default-features = false, optional = true }

[features]
default = ["parquet"]
parquet = ["dep:arrow", "dep:parquet"]
minimal = []

[build-dependencies]
chrono = "0.4"

[dev-dependencies]
assert_cmd = "2.0"
predicates = "3.1"
tempfile = "3.8"
bytes = "1.0"

[profile.release]
opt-level = 3
lto = true
codegen-units = 1
panic = "abort"
strip = true

# Optimize most dependencies for size
[profile.release.package."*"]
opt-level = "z"
strip = true

# Keep performance-critical crates optimized for speed
[profile.release.package.sunce]
opt-level = 3
[profile.release.package.solar-positioning]
opt-level = 3
[profile.release.package.chrono]
opt-level = 3
[profile.release.package.chrono-tz]
opt-level = 3

[profile.dev]
opt-level = 0
debug = true

# The profile that 'dist' will build with
[profile.dist]
inherits = "release"
lto = "thin"

# Config for 'dist'
[workspace.metadata.dist]
# The preferred dist version to use in CI (Cargo.toml SemVer syntax)
dist-version = "0.30.0"
# CI backends to support
ci = "github"
# The installers to generate for each app
installers = ["shell", "powershell", "homebrew"]
# Publish jobs to run in CI
publish-jobs = ["homebrew"]
# A GitHub repo to push Homebrew formulas to
tap = "klausbrunner/homebrew-tap"
# Target platforms to build apps for (Rust target-triple syntax)
targets = ["aarch64-apple-darwin", "x86_64-unknown-linux-gnu", "x86_64-pc-windows-msvc"]
# Which actions to run on pull requests
pr-run-mode = "plan"
# The preferred dist version to use in CI (Cargo.toml SemVer syntax)
cargo-dist-version = "0.30.0"
# Path that installers should place binaries in
install-path = "CARGO_HOME"
# Whether to install an updater program
install-updater = false
unix-archive = ".tar.zst"
